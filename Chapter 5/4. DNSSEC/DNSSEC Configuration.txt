Configuring DNSSEC 
DNSSEC Master Configuration
Step 1: Download and Install dnssec-tools package.
#apt-get install dnssec-tools

Step 2: Enable DNSSEC by adding the following configuration directives inside options{ }
"nano /etc/bind/named.conf.options"
	modify and add:
		dnssec-enable yes;
		dnssec-validation yes;
		dnssec-lookaside auto;


Step 3: Navigate to the location of your zone files.
	#cd /var/cache/bind
		Create a Zone Signing Key(ZSK) with the following command.
	#dnssec-keygen -a NSEC3RSASHA1 -b 2048 -n ZONE example.com
		Create a Key Signing Key(KSK) with the following command.
	dnssec-keygen -f KSK -a NSEC3RSASHA1 -b 4096 -n ZONE example.com

The directory will now have 4 keys - private/public pairs of ZSK and KSK. We have to add the public keys which contain the DNSKEY record to the zone file.


Step 4: add the public keys in (db.example.com)

$INCLUDE /etc/bind/Kexample.com.+007+22425.key
$INCLUDE /etc/bind/Kexample.com.+007+61584.key

Step 5: Sign the zone with the dnssec-signzone command.
	dnssec-signzone -3 <salt> -A -N INCREMENT -o <zonename> -t <zonefilename>

A 16 character string must be entered as the “salt”. 
The following command (head -c 1000 /dev/random | sha1sum | cut -b 1-16) outputs a random string of 16 characters which will be used as the salt.

This creates a new file named example.com.zone.signed which contains RRSIG records for each DNS record. We have to tell BIND to load this “signed” zone.

Step 6: Change the pointer file to "example.com.zone.signed"
#nano /etc/bind/named.conf.local
Change the file option inside the zone { } section.
	zone "example.com" IN {
	    type master;
	    file "example.com.zone.signed";
	    allow-transfer { 2.2.2.2; };
	    allow-update { none; };
	};

Step 6: Restart bind and 

Step 7: Check for the DNSKEY record using "dig" on the same server
	#dig DNSKEY example.com. @localhost +multiline

Step 8: Check for the presence of RRSIG records.
	#dig A example.com. @localhost +noadditional +dnssec +multiline	








